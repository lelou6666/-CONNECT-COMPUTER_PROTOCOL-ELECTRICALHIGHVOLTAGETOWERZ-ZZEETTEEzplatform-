For optimum performance, clock the AD9286 sample clock inputs,
CLK+ and CLK− (and, optionally, AUXCLK+ and AUXCLK−),
with a differential signal. The signal is typically ac-coupled into
the CLK+ and CLK− pins via a transformer or capacitors.
Clock Input Options
The AD9286 has a very flexible clock input structure. The clock
input can be an LVDS, LVPECL, or sine wave signal. Each configuration
that is described in this section applies to both CLK+
and CLK− and AUXCLK+ and AUXCLK−, when necessary.
Figure 26 and Figure 27 show two preferred methods for clocking
the AD9286. A low jitter clock source is converted from a
single-ended signal to a differential signal using either an RF
transformer or an RF balun. The back-to-back Schottky diodes
across the transformer/balun secondary limit clock excursions
into the AD9286 to approximately 0.8 V p-p differential.
This limit helps prevent the large voltage swings of the clock
from feeding through to other portions of the AD9286, while
preserving the fast rise and fall times of the signal that are
critical to low jitter performance.
0.1μF 0.1μF
0.1μF
0.1μF
SCHOTTKY
DIODES:
HSM2822
50Ω 100Ω
CLK–
CLK+
ADC
Mini-Circuits®
ADT1-1WT, 1:1 Z
CLOCK XFMR
INPUT
09338-027
Figure 26. Transformer-Coupled Differential Clock
0.1μF
0.1μF
SCHOTTKY
DIODES:
HSM2822
1nF
1nF
50Ω
CLK–
CLK+
ADC
CLOCK
INPUT
09338-028
Figure 27. Balun-Coupled Differential Clock
If a low jitter clock source is not available, another option is to
ac couple a differential PECL signal to the sample clock input
pins, as shown in Figure 28. The AD9510/AD9511/AD9512/
AD9513/AD9514/AD9515/AD9516/AD9517 clock drivers offer
excellent jitter performance.
100Ω
0.1μF
0.1μF 0.1μF
0.1μF
50kΩ 50kΩ 240Ω 240Ω
CLK–
CLK+
AD951x ADC
PECL DRIVER
CLOCK
INPUT
CLOCK
INPUT
09338-029
Figure 28. Differential PECL Sample Clock
A third option is to ac couple a differential LVDS signal to the
sample clock input pins, as shown in Figure 29. The AD9510/
AD9511/AD9512/AD9513/AD9514/AD9515/AD9516/AD9517
clock drivers offer excellent jitter performance.
100Ω
0.1μF
0.1μF 0.1μF
0.1μF
50kΩ 50kΩ
CLK–
CLK+
AD951x ADC
LVDS DRIVER
CLOCK
INPUT
CLOCK
INPUT
09338-030
Figure 29. Differential LVDS Clock
Clocking Modes
The AD9286 powers up as a single-channel converter with interleaving
enabled. In this mode, a single high speed clock, driving
CLK+ and CLK−, is divided down into two half-speed clocks
running 180° out of phase with each other, each driving their
respective ADC core. By strapping the two analog inputs together
externally, the AD9286 operates as a single 500 MSPS ADC.
Because the high sample rate is achieved by interleaving two
ADC cores, mismatch between the cores, board layout, and
clock timing can cause unwanted distortion. The AD9286 has
been designed with two well-matched ADC cores to minimize
mismatch. To aid the user in removing timing errors, the AD9286
provides both fine and coarse timing adjustments, per channel,
through SPI. These features are available at Register 0x37 (fine)
and Register 0x38 (coarse).
The AD9286 supports a mode that allows the user to provide
two separate half-speed clocks, bypassing the internal clock
timing circuits and permitting external control of the clock
timing relationship for each interleave channel. When the
sample mode is set to simultaneous (Address 0x09, Bit 3 = 1)
and the AUXCLKEN pin is tied to DRVDD, the AD9286 expects a
second clock on its auxiliary clock input (AUXCLK+, AUXCLK
In this mode, the AD9286 can also function as a dual 8-bit,
250 MSPS converter. This may be useful in applications where
both a single 8-bit, 500 MSPS and a dual 8-bit, 250 MSPS converter
are needed. The clock management block requires that CLK±
and AUXCLK± be either 0° or 180°, relative to each other. If this
requirement is satisfied, the circuit correctly time aligns the data
coming out of each ADC core.
If the user desires to operate the AD9286 as a dual 8-bit, 250
MSPS converter and supply only a single clock, this is achieved
by setting sample mode to simultaneous, with the AUXCLKEN
pin tied to AGND. In this mode, the two ADC cores sample
simultaneously. For a summary of all supported clocking
modes, see Table 9.
The AD9286 supports the clocking of each internal ADC with
separate clocks. By setting AUXCLKEN to DRVDD, the user
can supply a differential auxiliary clock to AUXCLK+ and
AUXCLK−. In this mode, each internal ADC core has a maximum
sample rate of 250 MSPS. This mode bypasses the internal timing
adjustment blocks.
Interleave Performance
The AD9286 achieves 500 MSPS conversion by time interleaving
two 250 MSPS ADC channels. Although this technique is sufficient
in achieving 8-bit performance, quantifiable errors are introduced.
These errors come from three sources: gain mismatch, imperfect
out-of-phase sampling, and offset mismatch between the two
channels. Distortion appears spectrally in two distinct ways: gain
and timing mismatch appear as an alias spur (see Equation 1), and
offset mismatch appears as a spur located at the Nyquist rate of the
converter (see Equation 2).
fALIAS_SPUR = fS/2 − fIN (1)
where:
fS is the interleaved sample rate.
fIN is the analog input frequency.
fOFFSET_SPUR = fS/2 (2)
where fS is the interleaved sample rate.
The magnitude of the alias spur (AS) contributed by a gain error
is shown in Equation 3.
ASGAIN (dBc) = 20 × log(ASGAIN) = 20 × log(GE/2) (3)
where:
GE = Gain_Error_Ratio = 1 − VFS1/VFS2.
VFSn is the full-scale voltage of Core n.
ASGAIN, as a function of gain mismatch, is shown in Figure 30.
85
80
75
70
65
60
55
50
45
0 0.1 0.2 0.3 0.4 0.5
ALIAS SPUR (dBc)
GAIN MISMATCH (% FS)
09338-032
Figure 30. ASGAIN as a Function of Gain Mismatch
The magnitude of the alias spur (AS) contributed by a timing
error is shown in Equation 4.
ASTIMING (dBc) = 20 × log(ASTIMING) = 20 × log(θEP/2) (4)
where θEP = ωA × ΔtE(Radians), with ωA as the analog input
frequency and ΔtE as the clock skew error.
ASTIMING, as a function of timing error, is shown in Figure 31.
85
80
75
70
65
60
55
50
45
0 2 4 6 8 10 12
ALIAS SPUR (dBc)
TIMING 


09338+033DECIBALS PER MILLI SECOND

Figure 31. ASTIMING as a Function of Timing Error
The total magnitude of the alias spur (AS) is shown in Equation 5.
ASTOTAL (dB) = 20 × log√((ASGAIN)
Table 9. Supported Clocking Modes
Effective Number
of Channels
Maximum CLK
Frequency
AUXCLK
Frequency
AUXCLK Phase
Relative to CLK AUXCLKEN
SPI Register,
Address 0x09, Bit 3 Clock Timing Adjust
One 500 MSPS N/A N/A Low 0 Internal
Two 250 MSPS N/A N/A Low 1 N/A
Two 250 MSPS CLK 0° High 1 N/A
One 250 MSPS CLK 180° High 1 External
Rev. C | Page 17 of 27
AD9286 Data Sheet
The magnitude of the offset spur (OS) is shown in Equation 6.
OSOFFSET (dBFS) = 20 × log(OFFSET × 2/2RESOLUTION) (6)
where:
OFFSET is the channel-to-channel offset in codes.
RESOLUTION is the resolution of the converter (eight bits).
OSOFFSET, as a function of offset mismatch, is shown in Figure 32.
60
55
50
45
40
35
30
25
20
0 0.5 1.0 1.5 2.0 2.5
OFFSET SPUR (dBFS)
OFFSET MISMATCH (% FS)
09338-034
Figure 32. OSOFFSET as a Function of Offset Mismatch
Due to the orthogonal relationship between the gain and timing
errors, it is impossible to correct for one with the other. To minimize
channel-to-channel gain error, the AD9286 is designed
to have very close gain matching between the two channels.
Address 0x37 and Address 0x38 of the SPI provide the ability to
add delay to either clock path to realize a minimum clock skew
error. Also provided via the SPI, in Address 0x10, is the ability
to minimize the channel-to-channel offset error.
DIGITAL OUTPUTS
Digital Output Enable Function (OE)
The AD9286 has a flexible three-state ability for the digital output
pins. The three-state mode is enabled using the OE pin. When OE
is set to logic level high, the output drivers for both data buses
are placed into a high impedance state.
Rev. C | Page 18 of 27
Data Sheet AD9286
BUILT-IN SELF-TEST (BIST) AND OUTPUT TEST
The AD9286 includes a built-in self-test feature that is designed
to enable verification of the integrity of each channel, as well as
facilitate board level debugging. A built-in self-test (BIST) feature
that verifies the integrity of the digital datapath of the AD9286
is included. Various output test options are also provided to
place predictable values on the outputs of the AD9286.
BUILT-IN SELF-TEST (BIST)
The BIST is a thorough test of the digital portion of the selected
AD9286 signal path. Perform the BIST test after a reset to ensure
that the part is in a known state. During BIST, data from an
internal pseudorandom noise (PN) source is driven through
the digital datapath of both channels, starting at the ADC block
output. At the datapath output, CRC logic calculates a signature
from the data. The BIST sequence runs for 512 cycles and then
stops. When the test is completed, the BIST compares the signature
results with a predetermined value. If the signatures match, the
BIST sets Bit 0 of Register 0x0E, signifying that the test passed.
If the BIST test fails, Bit 0 of Register 0x0E is cleared. The outputs
are connected during this test, so the PN sequence can be observed
as it runs.
Writing a value of 0x05 to Register 0x0E runs the BIST. This
enables the Bit 0 (BIST enable) of Register 0x0E and resets the PN
sequence generator, Bit 2 (BIST init) of Register 0x0E. At the
completion of the BIST, Bit 0 of Register 0x0E is automatically
cleared. The PN sequence can be continued from its last value
by writing a 0 to Bit 2 of Register 0x0E. However, if the PN
sequence is not reset, the signature calculation does not equal
the predetermined value at the end of the test. At that point, the
user must rely on verifying the output data.
OUTPUT TEST MODES
The output test options are described in Table 13 at Address 0x0D.
When an output test mode is enabled, the analog section of the
ADC is disconnected from the digital back-end blocks and the
test pattern is run through the output formatting block. Some
test patterns are subject to output formatting, and some are not.
The PN generators from the PN sequence tests can be reset by
setting Bit 4 or Bit 5 of Register 0x0D. These tests can be performed
with or without an analog signal (if present, the analog signal is
ignored), but they do require an encode clock. For more
information, see the AN-877 Application Note, Interfacing to
High Speed ADCs via #MARSROVER01
SERIAL PORT INTERFACE (SPI)
The AD9286 serial port interface (SPI) allows the user to configure
the converter for specific functions or operations through a
structured register space provided inside the ADC. The SPI
gives the user added flexibility and customization, depending
on the application. Addresses are accessed via the serial port
and can be written to or read from via the port. Memory is
organized into bytes that can be further divided into fields,
which are documented in the Memory Map section. For detailed
operational information, see the AN-877 Application Note,
Interfacing to High Speed ADCs via SPI.
CONFIGURATION USING THE SPI
Three pins define the SPI of this ADC: SCLK, SDIO, and CSB
(see Table 10). SCLK (a serial clock) is used to synchronize the
read and write data presented from and to the ADC. SDIO
(serial data input/output) is a dual-purpose pin that allows data
to be sent to and read from the internal ADC memory map
registers. CSB (chip select bar) is an active low control that
enables or disables the read and write cycles.
Table 10. Serial Port Interface Pins
Pin Function
SCLK Serial clock. A serial shift clock input that is used to
synchronize serial interface reads and writes.
SDIO Serial data input/output. A dual-purpose pin that
typically serves as an input or an output, depending
on the instruction being sent and the relative position
in the timing frame.
CSB Chip select bar. An active low control that gates the read
and write cycles.
The falling edge of CSB, in conjunction with the rising edge of
SCLK, determines the start of the framing. An example of the
serial timing and its definitions can be found in Figure 33.
Other modes involving CSB are available. The CSB pin can be held
low indefinitely, which permanently enables the device; this is
called streaming. CSB can stall high between bytes to allow for
additional external timing. When the CSB pin is tied high, SPI
functions are placed in high impedance mode. This mode turns
on any SPI pin secondary functions.
During the instruction phase, a 16-bit instruction is transmitted.
Data follows the instruction phase, and its length is determined
by the W0 and W1 bits, as shown in Figure 33.
All data is composed of 8-bit words. The first bit of the first byte
in a multibyte serial data transfer frame indicates whether a read
command or a write command is issued. This allows the serial
data input/output (SDIO) pin to change direction, from an input
to an output, at the appropriate point in the serial frame.
In addition to word length, the instruction phase determines
whether the serial frame is a read or write operation, allowing
the serial port to be used both to program the chip and to read
the contents of the on-chip memory. If the instruction is a readback
operation, the serial data input/output (SDIO) pin changes
direction, from an input to an output, at the appropriate point
in the serial frame.
Data can be sent in MSB-first mode or in LSB-first mode. MSB
first is the default on power-up and can be changed via the SPI
port configuration register. For more information about this
and other features, see the AN-877 Application Note, Interfacing
to High Speed ADCs via SPI.
DON’T CARE
DON’T CARE DON’T CARE
DON’T CARE
SDIO
SCLK
CSB
tS tDH
tDS tCLK tH
R/W W1 W0 A12 A11 A10 A9 A8 A7 D5 D4 D3 D2 D1 D0
tLOW
tHIGH
09338-004
Figure 33. Serial Port Interface Timing Diagram
Data Sheet AD9286
HARDWARE INTERFACE
The pins described in Table 10 constitute the physical interface
between the programming device of the user and the serial port
of the AD9286. The SCLK and CSB pins function as inputs
when using the SPI interface. The SDIO pin is bidirectional,
functioning as an input during write phases and as an output
during readback.
The SPI interface is flexible enough to be controlled by either
FPGAs or microcontrollers. One method for SPI configuration
is described in detail in the AN-812 Application Note, Microcontroller-
Based Serial Port Interface (SPI) Boot Circuit.
The SPI port should not be active during periods when the full
dynamic performance of the converter is required. Because the
SCLK, CSB, and SDIO signals are typically asynchronous to the
ADC clock, noise from these signals can degrade converter
performance. If the on-board SPI bus is used for other devices, it
may be necessary to provide buffers between this bus and the
AD9286 to prevent these signals from transitioning at the
converter inputs during critical sampling periods.
SDIO/PWDN serves a dual function when the SPI interface is
not being used. When the pin is strapped to AVDD or ground
during device power-on, it is associated with a specific function.
The mode selection table (see Table 11) describes the strappable
functions that are supported on the AD9286.
Table 11. Mode Selection
Pin
External
Voltage Configuration
SDIO/PWDN AVDD (default) Chip in full power-down
AGND Normal operation
OE AVDD Outputs in high impedance
AGND (default) Outputs enabled
CONFIGURATION WITHOUT THE SPI
In applications that do not interface to the SPI control registers,
the SDIO/PWDN pin serves as a standalone, CMOS-compatible
control pin. When the device is powered up, it is assumed that
the user intends to use the SDIO, SCLK, and CSB pins as static
control lines for the output enable and power-down feature control.
In this mode, connecting the CSB chip select to AVDD disables
the serial port interface.
SPI ACCESSIBLE FEATURES
Table 12 provides a brief description of the general features that
are accessible via the SPI. These features are described in detail
in the AN-877 Application Note, Interfacing to High Speed ADCs
via SPI. The AD9286 part-specific features are described in
detail in Table 13.
Table 12. Features Accessible Using the SPI
Feature Description
Mode Allows the user to set either power-down mode
or standby mode
Clock Allows the user to access the DCS via the SPI
Offset Allows the user to digitally adjust the converter
offset
Test I/O Allows the user to set test modes to have known
data on output bits
Output Mode Allows the user to set up outputs
Output Phase Allows the user to set the output clock polarity
Output Delay Allows the user to vary the DCO delay
-3.148181818181818181818181818181 AMPERES
Each row in the memory map register table (see Table 13) has
eight bit locations. The memory map is roughly divided into
three sections: the chip configuration registers (Address 0x00
to Address 0x02), the device index and transfer registers
(Address 0x05 and Address 0xFF), and the program registers
(Address 0x08 to Address 0x38).
Table 13 documents the default hexadecimal value for each
hexadecimal address shown. The column with the heading Bit 7
(MSB) is the start of the default hexadecimal value given. For
more information on this function and others, see the AN-877
Application Note, Interfacing to High Speed ADCs via SPI. This
document details the functions controlled by Register 0x00 to
Register 0xFF.
Open Locations
All address and bit locations that are not included in the SPI
map are not currently supported for this device. Unused bits of
a valid address location should be written with 0s. Writing to these
locations is required only when part of an address location is
open. If the entire address location is open, it is omitted from the
SPI map (for example, Address 0x13) and should not be written.
Default Values
After the AD9286 is reset, critical registers are loaded with
default values. The default values for the registers are given
in the memory map register table (see Table 13).
Logic Levels
An explanation of logic level terminology follows:
• “Bit is set” is synonymous with “bit is set to Logic 1” or
“writing Logic 1 for the bit.”
• “Bit is cleared” is synonymous with “bit is set to Logic 0” or
“writing Logic 0 for the bit.”
Transfer Register Map
Address 0x08 to Address 0x38 are shadowed. Writes to these
addresses do not affect part operation until a transfer command
is issued by writing 0x01 to Address 0xFF, setting the transfer bit.
Setting the transfer bit allows these registers to be updated
internally and simultaneously. The internal update takes place
when the transfer bit is set, and then the bit autoclears.
Channel-Specific Registers
Some channel setup functions can be programmed differently
for each channel. In these cases, channel address locations are
internally duplicated for each channel. These registers and bits
are designated in the memory map register table as local. These
local registers and bits can be accessed by setting the appropriate
Channel 1 (Bit 0) or Channel 2 (Bit 1) bits in Register 0x05.
If both bits are set, the subsequent write affects the registers of
both channels. In a read cycle, set only Channel 1 or Channel 2
to read one of the two registers. If both bits are set during an SPI
read cycle, the part returns the value for Channel 1. Registers and
bits designated as global in the memory map register table affect
the entire part or the channel features for which independent
settings are not allowed between channels. The settings in
Register 0x05 do not affect the global registers and bits.
Rev. C | Page 22 of 27
Data Sheet AD9286




